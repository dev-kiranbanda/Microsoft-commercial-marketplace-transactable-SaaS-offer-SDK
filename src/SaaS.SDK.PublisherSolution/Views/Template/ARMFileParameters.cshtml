@using Microsoft.Marketplace.SaaS.SDK.Services.Models
@model Microsoft.Marketplace.SaaS.SDK.Services.Models.DeploymentParameterViewModel
<!DOCTYPE html>

<html>
<head>
    @*<meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="~/css/jquery-ui/jquery-ui.css" rel="stylesheet" />
        <link href="~/css/jquery-ui/style.css" rel="stylesheet" />
        <script src="~/lib/jquery-ui/jquery-1.12.4.js"></script>
        <script src="~/lib/jquery-ui/jquery-ui.js"></script>*@
</head>
<body>


    @*<script>
            $(function () {
                $("#tabs").tabs();
            });
        </script>*@
    <div id="myModal">
        <form id="TemplateFormParms" method="post">
            @if (Model.FileName != null && Model.FileName != "")
            {
                <div class="table-responsive mt20">
                    <div class="modal-body text-center">
                        <dl class="row text-left">
                            <dt class="col-sm-4 pl80">
                                <label><b>ARM Template:</b></label>
                            </dt>
                            <dd class="col-sm-8 pl80">
                                <input id="ArmtempalteId" type="hidden" value="@Model.ArmtempalteId" class="iHidden" name="ArmtempalteId" />
                                <input id="FileName" type="hidden" value="@Model.FileName" class="iHidden" name="FileName" />
                                @Html.DisplayFor(model => model.FileName)
                            </dd>
                        </dl>
                    </div>


                    @*<input id="btninput" type="button" calss="cm-button-default mt0" value="Input">
                        <input id="btnoutput" type="button" calss="cm-button-default mt0" value="Output">*@
                    <div class="card-body ">
                        <div class="text-left ">
                            <span class="cm-section-heading">Input Parameters</span>
                        </div>
                    </div>
                    <div id="tabinput">
                        <table class="table table-bordered dt-responsive cm-table" width="100%" cellspacing="0">
                            <tr>
                                <th>
                                    Parameter Name

                                </th>

                                <th>
                                    Parameter Value

                                </th>
                                <th>
                                    Parameter Data Type

                                </th>
                                @*<th>
                                        Parameter Type
                                    </th>*@
                            </tr>

                            @for (int i = 0; i < Model.DeplParms.Count(); i++)
                            {
                                @if (@Model.DeplParms[i].ParameterType == "input")
                                {
                                    <tr>
                                        <td>
                                            <input id="DeplParms[@i].ParameterName" type="hidden" value="@Model.DeplParms[i].ParameterName" class="iHidden" name="DeplParms[@i].ParameterName" />
                                            <input id="DeplParms[@i].ParameterDataType" type="hidden" value="@Model.DeplParms[i].ParameterDataType" class="iHidden" name="DeplParms[@i].ParameterDataType" />
                                            <input id="DeplParms[@i].ParameterType" type="hidden" value="@Model.DeplParms[i].ParameterType" class="iHidden" name="DeplParms[@i].ParameterType" />
                                            @*<input id="parameters[@i].ParameterName" type="hidden" value="@Model.parameters[i].ParameterName" class="iHidden" name="parameters[@i].ParameterName" />*@
                                            @Html.DisplayFor(model => model.DeplParms[i].ParameterName)
                                            @if (@Model.DeplParms[i].ParameterType == "input")
                                            {<span class="red-star">*</span>
                                            }
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.DeplParms[i].ParameterValue, new { @class = @Model.DeplParms[i].ParameterType })
                                        </td>
                                        <td>@Html.DisplayFor(model => model.DeplParms[i].ParameterDataType)</td>

                                        @*<td>@Html.DisplayFor(model => model.DeplParms[i].ParameterType)</td>*@

                                    </tr>
                                }
                            }
                        </table>
                    </div>
                    <div class="card-body ">
                        <div class="text-left ">
                            <span class="cm-section-heading">Output Parameters</span>
                        </div>
                    </div>
                    <div id="taboutput">
                        <table class="table table-bordered dt-responsive cm-table" width="100%" cellspacing="0">
                            <tr>
                                <th>
                                    Parameter Name

                                </th>

                                <th>
                                    Parameter Value

                                </th>
                                <th>
                                    Parameter Data Type

                                </th>
                                @*<th>
                                        Parameter Type
                                    </th>*@
                            </tr>

                            @for (int i = 0; i < Model.DeplParms.Count(); i++)
                            {
                                @if (@Model.DeplParms[i].ParameterType == "output")
                                {
                                    <tr>

                                        <td>

                                            <input id="DeplParms[@i].ParameterName" type="hidden" value="@Model.DeplParms[i].ParameterName" class="iHidden" name="DeplParms[@i].ParameterName" />
                                            <input id="DeplParms[@i].ParameterDataType" type="hidden" value="@Model.DeplParms[i].ParameterDataType" class="iHidden" name="DeplParms[@i].ParameterDataType" />
                                            <input id="DeplParms[@i].ParameterType" type="hidden" value="@Model.DeplParms[i].ParameterType" class="iHidden" name="DeplParms[@i].ParameterType" />
                                            @*<input id="parameters[@i].ParameterName" type="hidden" value="@Model.parameters[i].ParameterName" class="iHidden" name="parameters[@i].ParameterName" />*@
                                            @Html.DisplayFor(model => model.DeplParms[i].ParameterName)
                                            @if (@Model.DeplParms[i].ParameterType == "input")
                                            {<span class="red-star">*</span>
                                            }
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.DeplParms[i].ParameterValue, new { @class = @Model.DeplParms[i].ParameterType })
                                        </td>
                                        <td>@Html.DisplayFor(model => model.DeplParms[i].ParameterDataType)</td>

                                        @*<td>@Html.DisplayFor(model => model.DeplParms[i].ParameterType)</td>*@

                                    </tr>
                                }
                            }
                        </table>
                    </div>
                    <div class="text-right" style="text-align:right; width:1100px;">
                        <input class="cm-button-default mt0" type="button" onclick="saveArmTemplateParameters()" value="Save" />
                    </div>

                </div>
            }
        </form>
    </div>
</body>
</html>
<script>

    $(document).ready(function () {
        $(".output").attr("disabled", "disabled");
        //$("#taboutput").hide();
    })
    //$("#btnoutput").click(function () {


    //    $("#taboutput").show();
    //    $("#tabinput").hide();


    //})
    //$("#btninput").click(function () {


    //    $("#taboutput").hide();
    //    $("#tabinput").show();


    //})


    function saveArmTemplateParameters() {
        debugger;
        if (validate()) {
            var formobject = $('#TemplateFormParms').serialize();
            $.ajax({
                url: 'Template/SaveTemplateParameters',
                type: 'POST',
                data: formobject,
                cache: false,
                success: function (result) {
                    successconfirmDialog();
                    $('#MainDiv').html(result);
                },
                Error:
                    function (result) {
                        errorconfirmDialog();
                        $('#MainDiv').html(result);
                    }
            });
        } else {
            swal({
                title: "Required",
                text: "Please fill all required values",
                icon: "warning"
            })

        }
    }
    function successconfirmDialog() {
        swal({
            title: "Saved",
            text: "ARMTemplate parameters saved successfully.",
            icon: "success",
            timer: 1000
        })
    }
    function errorconfirmDialog() {
        swal({
            title: "Error",
            text: "An error has occured, please check the log.",
            icon: "error",
            timer: 1000
        })
    }

    function validate() {
        var valid = true;
        $('.input').each(function () {
            if ($(this).val() == "") //check loginc here
                return valid = false;
        });
        return valid;
    }
</script>
