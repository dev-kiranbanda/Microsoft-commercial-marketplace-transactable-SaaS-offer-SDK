@using Microsoft.Marketplace.SaasKit.Models
@using Microsoft.Marketplace.SaaS.SDK.CustomerProvisioning.Models

@model Microsoft.Marketplace.SaaS.SDK.CustomerProvisioning.Models.SubscriptionResultExtension

@{
    ViewData["Title"] = "Home";
}
@if (!Model.ShowWelcomeScreen)
{
    <div class="container" id="divHome">
        <form method="post" id="frmIndex">

            <div class="text-white mt20">
                <span class="cm-section-heading">Subscription Details</span>
            </div>
            @if (Model != null && !string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">
                    <strong>Error!</strong> Some Error Occurred During Operation!
                </div>
            }
            else
            {
                <div class="cm-panel-default mt20">
                    <dl class="row text-left">
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Customer Name ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.CustomerName)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Customer Email ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.CustomerEmailAddress)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Offer ID ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.OfferId)
                            @Html.HiddenFor(model => model.OfferId)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Plan ID ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.PlanId)
                            @Html.HiddenFor(model => model.PlanId)
                            @Html.HiddenFor(model => model.GuidPlanId)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Purchaser Email ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.Purchaser.EmailId)
                            @Html.HiddenFor(model => model.Purchaser.EmailId)
                        </dd>

                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Azure Tenant ID ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.Purchaser.TenantId)
                            @Html.HiddenFor(model => model.Purchaser.TenantId)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("SaaS Subscription ID ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.Id)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("SaaS Subscription Name ")
                        </dt>
                        <dd class="col-sm-9 p-2">
                            @Html.DisplayFor(model => model.Name)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Subscription Status ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.SaasSubscriptionStatus)
                        </dd>

                        @if (Model.SubscriptionParameters != null && Model.SubscriptionParameters.Count() > 0)
                        {

                            for (int i = 0; i < Model.SubscriptionParameters.Count(); i++)
                            {
                                <dt class="col-sm-3 p-2 p10">
                                    @Html.DisplayName(Model.SubscriptionParameters[i].DisplayName)
                                    @if (Model.SubscriptionParameters[i].IsRequired == true)
                                    {<span class="red-star">*</span>}
                                    @Html.HiddenFor(model => model.SubscriptionParameters[i].Id)
                                    @Html.HiddenFor(model => model.SubscriptionParameters[i].PlanAttributeId)
                                    @Html.HiddenFor(model => model.SubscriptionParameters[i].ValueType)
                                    @Html.HiddenFor(model => model.SubscriptionParameters[i].PlanId)
                                    @Html.HiddenFor(model => model.SubscriptionParameters[i].OfferId)
                                    @Html.HiddenFor(model => model.SubscriptionParameters[i].SubscriptionId)
                                    @Html.HiddenFor(model => model.SubscriptionParameters[i].DisplayName)
                                    @Html.HiddenFor(model => model.SubscriptionParameters[i].Type)

                                </dt>
                                @if (Model.SaasSubscriptionStatus == SubscriptionStatusEnum.PendingFulfillmentStart)
                                {
                                    @if (Model.SubscriptionParameters[i].FromList == true)
                                    {
                                        var data = Model.SubscriptionParameters[i].ValuesList;
                                        var selectList = new SelectList(data.Split(','));


                                        <dd class="col-sm-9 p-2 p10">

                                            @if (Model.SubscriptionParameters[i].IsRequired == true)
                                            {
                                                @Html.DropDownList(string.Format("SubscriptionParameters[{0}].Value", @i), selectList, new { @class = "w200", @required = "required", name = string.Format("SubscriptionParameters[{0}].Value", @i), @id = string.Format("SubscriptionParameters_{0}__Value", @i) })

                                            }
                                            else
                                            {
                                                @Html.DropDownList(string.Format("SubscriptionParameters[{0}].Value", @i), selectList, new { @class = "w200", name = string.Format("SubscriptionParameters[{0}].Value", @i), @id = string.Format("SubscriptionParameters_{0}__Value", @i) })

                                            }

                                        </dd>

                                    }
                                    else if (Model.SubscriptionParameters[i].HTMLType == "date")
                                    {
                                        <dd class="col-sm-9 p-2 p10">

                                            @if (Model.SubscriptionParameters[i].IsRequired == true)
                                            {
                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = "w200", @required = "required", @type = @Model.SubscriptionParameters[i].HTMLType })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = "w200", @type = @Model.SubscriptionParameters[i].HTMLType })
                                            }

                                        </dd>
                                    }
                                    else
                                    {
                                        <dd class="col-sm-9 p-2 p10">

                                            @if (Model.SubscriptionParameters[i].IsRequired == true)
                                            {
                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = "w200", @required = "required", @type = @Model.SubscriptionParameters[i].HTMLType })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = "w200", @type = @Model.SubscriptionParameters[i].HTMLType })
                                            }

                                        </dd>
                                    }
                                }
                                else
                                {
                                    <dd class="col-sm-9 p-2 p10">
                                        @Html.DisplayFor(model => model.SubscriptionParameters[i].Value)
                                        @Html.HiddenFor(model => model.SubscriptionParameters[i].Value)
                                    </dd>
                                }

                            }

                        }

                    </dl>
                </div>
                <div class="text-right">
                    @if (Model.SaasSubscriptionStatus == SubscriptionStatusEnum.Subscribed)
                    {
                        <button type="submit" id="btnDeactivate" asp-action="SubscriptionOperation" asp-route-subscriptionId="@Model.Id" asp-route-planId="@Model.PlanId" asp-route-operation="Deactivate" class="cm-button-danger text-right">Unsubscribe</button>
                        <button type="submit" asp-action="Subscriptions" class="cm-button-default text-right">Go to Subscription List</button>
                    }
                    @if (Model.SaasSubscriptionStatus == SubscriptionStatusEnum.PendingFulfillmentStart)
                    {
                        <a onclick="SubscriptionOperation('@Model.Id','@Model.PlanId','Activate')" id="btnActivate" class="cm-button-default text-right">Activate</a>
                    }
                    @* <button type="submit" asp-action="SubscriptionOperation" asp-route-subscriptionId="@Model.Id" asp-route-planId="@Model.PlanId" asp-route-operation="Activate" class="cm-button-default text-right">Save</button>*@
                </div>
            }
        </form>
    </div>
}
else
{
    @await Component.InvokeAsync("HomePageContent")
}
<script type="text/javascript">
    $(document).ready(function () {

        $("#frmIndex").submit(function (e) {
            //stop submitting the form to see the disabled button effect
            //disable the submit button
            $("#btnDeactivate").attr("disabled", true);
            $("#btnDeactivate").prop("disabled", true);
            $("#btnDeactivate").text("Processing...");
            //disable a normal button
            $("#btnActivate").attr("disabled", true);
            $("#btnActivate").text("Processing...");
            return true;

        });
    });
    function SubscriptionOperation(subscriptionId, planId, operation) {

        if (validate()) {
            var formobject = $('#frmIndex').serialize();
            $("#btnActivate").removeAttr('onclick');
            $("#btnActivate").text("Processing...");
            $.ajax({
                url: '/Home/SubscriptionOperation',
                type: 'POST',
                data: formobject + "&subscriptionId=" + subscriptionId + "&planId=" + planId + "&operation=" + operation,
                cache: false,
                success: function (result) {
                    $('#divIndex').html(result);
                },
                Error:
                    function (result) {
                        $('#divIndex').html(result);
                    }
            });
        }
        else {
            swal({
                title: "Required",
                text: "Please fill all required values",
                icon: "warning"
            })

        }
    }


    function validate() {
        var valid = true;
        $(':input[required]:visible').each(function () {
            if ($(this).val() == "") //check loginc here
                return valid = false;
        });
        return valid;
    }
</script>
